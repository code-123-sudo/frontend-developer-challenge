{"ast":null,"code":"import _toConsumableArray from \"/home/shishir/Desktop/assignment/frontend-developer-challenge/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/shishir/Desktop/assignment/frontend-developer-challenge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport undoable from 'redux-undo';\n\nvar todo = function todo(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false\n      };\n\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return _objectSpread({}, state, {\n        completed: !state.completed\n      });\n\n    default:\n      return state;\n  }\n};\n\nfunction immutablySwapItems(items, firstIndex, secondIndex, length) {\n  var results = items.slice();\n  if (secondIndex < 0 || secondIndex >= length) return results;\n  var firstItem = items[firstIndex];\n  results[firstIndex] = items[secondIndex];\n  results[secondIndex] = firstItem;\n  return results;\n}\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{\n    id: 0,\n    text: 'https://www.youtube.com/watch?v=oUFJJNQGwhk',\n    completed: false\n  }];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [].concat(_toConsumableArray(state), [todo(undefined, action)]);\n\n    case 'TOGGLE_TODO':\n      return [].concat(_toConsumableArray(state.slice(0, action.id)), _toConsumableArray(state.slice(action.id + 1)));\n\n    case 'MOVE_UP':\n      return immutablySwapItems(state, action.index, action.index - 1, action.length);\n\n    case 'MOVE_DOWN':\n      return immutablySwapItems(state, action.index, action.index + 1, action.length);\n\n    default:\n      return state;\n  }\n};\n\nvar undoableTodos = undoable(todos);\nexport default undoableTodos;","map":{"version":3,"sources":["/home/shishir/Desktop/assignment/frontend-developer-challenge/src/reducers/todos.js"],"names":["undoable","todo","state","action","type","id","text","completed","immutablySwapItems","items","firstIndex","secondIndex","length","results","slice","firstItem","todos","undefined","index","undoableTodos"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AACLC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADN;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK,aAAL;AACE,UAAIL,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAxB,EAA4B;AAC1B,eAAOH,KAAP;AACD;;AAED,+BACKA,KADL;AAEEK,QAAAA,SAAS,EAAE,CAACL,KAAK,CAACK;AAFpB;;AAIF;AACE,aAAOL,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,SAASM,kBAAT,CAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,WAA/C,EAA4DC,MAA5D,EAAoE;AAClE,MAAMC,OAAO,GAAEJ,KAAK,CAACK,KAAN,EAAf;AACA,MAAKH,WAAW,GAAG,CAAd,IAAoBA,WAAW,IAAIC,MAAxC,EAAiD,OAAOC,OAAP;AACjD,MAAME,SAAS,GAAGN,KAAK,CAACC,UAAD,CAAvB;AACAG,EAAAA,OAAO,CAACH,UAAD,CAAP,GAAsBD,KAAK,CAACE,WAAD,CAA3B;AACAE,EAAAA,OAAO,CAACF,WAAD,CAAP,GAAuBI,SAAvB;AACA,SAAOF,OAAP;AACD;;AAED,IAAMG,KAAK,GAAG,SAARA,KAAQ,GAEA;AAAA,MAFCd,KAED,uEAFS,CAAC;AAAEG,IAAAA,EAAE,EAAG,CAAP;AAAUC,IAAAA,IAAI,EACpC,6CADsB;AACwBC,IAAAA,SAAS,EAAE;AADnC,GAAD,CAET;AAAA,MAAXJ,MAAW;;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,0CACKF,KADL,IAEED,IAAI,CAACgB,SAAD,EAAYd,MAAZ,CAFN;;AAIF,SAAK,aAAL;AACE,0CACKD,KAAK,CAACY,KAAN,CAAY,CAAZ,EAAeX,MAAM,CAACE,EAAtB,CADL,sBAEKH,KAAK,CAACY,KAAN,CAAYX,MAAM,CAACE,EAAP,GAAY,CAAxB,CAFL;;AAIF,SAAK,SAAL;AACE,aAAOG,kBAAkB,CAACN,KAAD,EAAOC,MAAM,CAACe,KAAd,EAAoBf,MAAM,CAACe,KAAP,GAAa,CAAjC,EAAmCf,MAAM,CAACS,MAA1C,CAAzB;;AACF,SAAK,WAAL;AACI,aAAOJ,kBAAkB,CAACN,KAAD,EAAOC,MAAM,CAACe,KAAd,EAAoBf,MAAM,CAACe,KAAP,GAAa,CAAjC,EAAmCf,MAAM,CAACS,MAA1C,CAAzB;;AACJ;AACE,aAAOV,KAAP;AAhBJ;AAkBD,CArBD;;AAuBA,IAAMiB,aAAa,GAAGnB,QAAQ,CAACgB,KAAD,CAA9B;AAEA,eAAeG,aAAf","sourcesContent":["import undoable from 'redux-undo'\n\nconst todo = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id) {\n        return state\n      }\n\n      return {\n        ...state,\n        completed: !state.completed\n      }\n    default:\n      return state\n  }\n}\n\nfunction immutablySwapItems(items, firstIndex, secondIndex, length) {\n  const results= items.slice();\n  if ( secondIndex < 0  || secondIndex >= length ) return results;\n  const firstItem = items[firstIndex];\n  results[firstIndex] = items[secondIndex];\n  results[secondIndex] = firstItem;\n  return results;\n}\n\nconst todos = (state = [{ id : 0, text : \n  'https://www.youtube.com/watch?v=oUFJJNQGwhk',completed: false}\n], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        todo(undefined, action)\n      ]\n    case 'TOGGLE_TODO':\n      return [\n        ...state.slice(0, action.id),\n        ...state.slice(action.id + 1)\n      ]\n    case 'MOVE_UP':\n      return immutablySwapItems(state,action.index,action.index-1,action.length)\n    case 'MOVE_DOWN':\n        return immutablySwapItems(state,action.index,action.index+1,action.length)\n    default:\n      return state\n  }\n}\n\nconst undoableTodos = undoable(todos)\n\nexport default undoableTodos\n"]},"metadata":{},"sourceType":"module"}