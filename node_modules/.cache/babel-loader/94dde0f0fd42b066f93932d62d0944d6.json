{"ast":null,"code":"var _jsxFileName = \"/home/shishir/Desktop/assignment/src/components/TodoList.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport ReactPlayer from 'react-player';\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos,\n      onTodoClick = _ref.onTodoClick,\n      moveUp = _ref.moveUp,\n      moveDown = _ref.moveDown;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, todos.map(function (todo, index) {\n    return React.createElement(Todo, Object.assign({\n      key: todo.id\n    }, todo, {\n      onClick: function onClick() {\n        return onTodoClick(todo.id);\n      },\n      upArrow: function upArrow() {\n        return moveUp(index, todos.length);\n      },\n      downArrow: function downArrow() {\n        return moveDown(index, todos.length);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }), React.createElement(ReactPlayer, {\n    url: todos[index] ? todos[index].text : 'https://www.youtube.com/watch?v=oUFJJNQGwhk',\n    playing: true,\n    controls: true,\n    onEnded: function onEnded() {\n      return onTodoClick(todos[index].id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onTodoClick: PropTypes.func.isRequired\n};\nexport default TodoList;","map":{"version":3,"sources":["/home/shishir/Desktop/assignment/src/components/TodoList.js"],"names":["React","useState","PropTypes","Todo","ReactPlayer","TodoList","todos","onTodoClick","moveUp","moveDown","map","todo","index","id","length","text","propTypes","arrayOf","shape","number","isRequired","completed","bool","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8C;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7D,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAgB;AAEzB,WAAO,oBAAC,IAAD;AACL,MAAA,GAAG,EAAED,IAAI,CAACE;AADL,OAEDF,IAFC;AAGL,MAAA,OAAO,EAAE;AAAA,eAAMJ,WAAW,CAACI,IAAI,CAACE,EAAN,CAAjB;AAAA,OAHJ;AAIL,MAAA,OAAO,EAAE;AAAA,eAAML,MAAM,CAACI,KAAD,EAAON,KAAK,CAACQ,MAAb,CAAZ;AAAA,OAJJ;AAKL,MAAA,SAAS,EAAE;AAAA,eAAML,QAAQ,CAACG,KAAD,EAAON,KAAK,CAACQ,MAAb,CAAd;AAAA,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAOD,GATA,CADH,EAYA,oBAAC,WAAD;AACE,IAAA,GAAG,EAAER,KAAK,CAACM,KAAD,CAAL,GAAcN,KAAK,CAACM,KAAD,CAAL,CAAaG,IAA3B,GAAkC,6CADzC;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAACD,KAAK,CAACM,KAAD,CAAL,CAAaC,EAAd,CAAjB;AAAA,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,CADA;AAuBG,CAxBL;;AA0BAR,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,KAAV,CAAgB;AACvCL,IAAAA,EAAE,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UADkB;AAEvCC,IAAAA,SAAS,EAAEnB,SAAS,CAACoB,IAAV,CAAeF,UAFa;AAGvCL,IAAAA,IAAI,EAAEb,SAAS,CAACqB,MAAV,CAAiBH;AAHgB,GAAhB,EAItBA,UAJI,EAIQA,UALI;AAMnBb,EAAAA,WAAW,EAAEL,SAAS,CAACsB,IAAV,CAAeJ;AANT,CAArB;AASA,eAAef,QAAf","sourcesContent":["import React,  { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\nimport ReactPlayer from 'react-player'\n\nconst TodoList = ({ todos, onTodoClick, moveUp, moveDown }) => {\n  return (\n  <ul>\n    {todos.map((todo,index) => {\n\n      return <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => onTodoClick(todo.id)}\n        upArrow={() => moveUp(index,todos.length)}\n        downArrow={() => moveDown(index,todos.length)}\n      />\n    })}\n\n  <ReactPlayer\n    url={todos[index] ?todos[index].text : 'https://www.youtube.com/watch?v=oUFJJNQGwhk'\n    }\n    playing={true}\n    controls={true}\n    onEnded={() => onTodoClick(todos[index].id) }\n  />\n\n  </ul>\n)\n    }\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onTodoClick: PropTypes.func.isRequired\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}